name: Karate Tests

on:
  push:
    branches:
      - main  # Adjust branch name as per your default branch

jobs:
  test:
    runs-on: windows-latest  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks out your repository

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('swaglab/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Download Chrome Installer
        run: Invoke-WebRequest -Uri 'https://dl.google.com/chrome/install/latest/chrome_installer.exe' -OutFile 'chrome_installer.exe'

      - name: Install Chrome
        run: .\chrome_installer.exe /silent /install  # Install Chrome silently

      - name: Download ChromeDriver
        run: |
          $chromeDriverVersion = Invoke-RestMethod -Uri 'https://chromedriver.storage.googleapis.com/LATEST_RELEASE'
          Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/$chromeDriverVersion/chromedriver_win32.zip" -OutFile "chromedriver.zip"
          Expand-Archive chromedriver.zip -DestinationPath .

      - name: Start Chrome Headless
        run: |
          $env:PATH += ";$PWD"
          $PORT = 9222
          echo "PORT=$PORT" >> $env:GITHUB_ENV
          Start-Process chrome --args="--headless --remote-debugging-port=$PORT --disable-gpu --no-sandbox" -NoNewWindow -Wait
        shell: powershell


      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'  # Specify the distribution

      - name: Install dependencies(Skip Test)
        run: mvn clean install -DskipTests
        working-directory: swaglab  # Set the working directory to swaglab

      - name: Run SwagLab Scenarios
        working-directory: swaglab  # Set the working directory to swaglab
        run: |
          mvn clean test -Dtest=TestEntireFlowRunner -Dmaven.test.failure.ignore=true

            
      - name: Upload Surefire Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: surefire-test-report
          path: swaglab/target/surefire-reports

      - name: Generate Karate Test Report
        if: always()  # Always run this step
        run: |
          mkdir -p karate-reports
          cp -r swaglab/target/karate-reports/* karate-reports/
        
      - name: Upload Karate Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: karate-test-report
          path: karate-reports
        
      
